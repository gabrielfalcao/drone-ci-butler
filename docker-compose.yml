version: '3'

services:
  drone-ci-butler-elasticsearch.ci-butler-ns.svc.cluster.local:
    container_name: elasticsearch-butler
    image: elasticsearch:7.13.2
    env_file:
      - ./tools/docker.env
    volumes:
      - ./elasticsearch-data:/usr/share/elasticsearch/data
    # ports:
    #   - 0.0.0.0:9201:9200
    #   - 0.0.0.0:9301:9300
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  drone-ci-butler-kibana.ci-butler-ns.svc.cluster.local:
    container_name: kibana-butler
    image: kibana:7.13.2
    env_file:
      - ./tools/docker.env
    ports:
      - 0.0.0.0:5602:5601
    environment:
      discovery.type: single-node
      ELASTICSEARCH_HOSTS: 'http://elasticsearch:9200'
    depends_on:
      - drone-ci-butler-elasticsearch.ci-butler-ns.svc.cluster.local
  drone-ci-butler-redis.ci-butler-ns.svc.cluster.local:
    container_name: redis-butler
    image: redis:6.2.4-alpine
    env_file:
      - ./tools/docker.env
    volumes:
      - ./redis-data:/data
    command: redis-server --appendonly yes

  drone-ci-butler-postgres.ci-butler-ns.svc.cluster.local:
    container_name: postgres-butler
    image: postgres:13
    env_file:
      - ./tools/docker.env
    volumes:
      - ./postgres-data:/var/lib/postgresql


  drone-ci-butler-workers.ci-butler-ns.svc.cluster.local:
    container_name: butler-workers
    build: .
    image: gabrielfalcao/drone-ci-butler:latest
    depends_on:
      - drone-ci-butler-postgres.ci-butler-ns.svc.cluster.local
      - drone-ci-butler-elasticsearch.ci-butler-ns.svc.cluster.local
      - drone-ci-butler-redis.ci-butler-ns.svc.cluster.local
    ports:
      - 0.0.0.0:5001:5001
      - 0.0.0.0:5002:5002
      - 0.0.0.0:5555:5555
      - 0.0.0.0:5556:5556
      - 0.0.0.0:6666:6666
      - 0.0.0.0:7777:7777

    volumes:
      - ./:/app
      - ~/.drone-ci-butler.yml:/drone-ci-butler.yml

    restart: always
    env_file:
      - ./tools/docker.env
    environment:
      DRONE_CI_BUTLER_CONFIG_PATH: /drone-ci-butler.yml

    command: drone-ci-butler workers --migrate

  docker-ci-butler-builds.ci-butler-ns.svc.cluster.local:
    container_name: butler-builds
    build: .
    image: gabrielfalcao/drone-ci-butler:latest
    depends_on:
      - drone-ci-butler-postgres.ci-butler-ns.svc.cluster.local
      - drone-ci-butler-elasticsearch.ci-butler-ns.svc.cluster.local
      - drone-ci-butler-redis.ci-butler-ns.svc.cluster.local
      - drone-ci-butler-workers.ci-butler-ns.svc.cluster.local

    volumes:
      - ./:/app
      - ~/.drone-ci-butler.yml:/drone-ci-butler.yml

    restart: always
    environment:
      DRONE_CI_BUTLER_CONFIG_PATH: /drone-ci-butler.yml

    env_file:
      - ./tools/docker.env

    command: sh -c 'sleep 10 && drone-ci-butler builds'

  drone-ci-butler-web.ci-butler-ns.svc.cluster.local:
    container_name: butler-web
    depends_on:
      - drone-ci-butler-postgres.ci-butler-ns.svc.cluster.local
      - drone-ci-butler-elasticsearch.ci-butler-ns.svc.cluster.local
      # - drone-ci-butler-kibana.ci-butler-ns.svc.cluster.local
      - drone-ci-butler-redis.ci-butler-ns.svc.cluster.local
      - drone-ci-butler-workers.ci-butler-ns.svc.cluster.local

    build: .
    image: gabrielfalcao/drone-ci-butler:latest
    ports:
      - 0.0.0.0:5000:5000
    volumes:
      - ./:/app
      - ~/.drone-ci-butler.yml:/drone-ci-butler.yml

    restart: always
    env_file:
      - ./tools/docker.env

    command: drone-ci-butler web --migrate
